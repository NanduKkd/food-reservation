{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\shohrat.garadaghli\\\\Desktop\\\\dev\\\\orderApp\\\\src\\\\components\\\\orderFormModal\\\\OrderFormModal.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport DateTimePicker from '@react-native-community/datetimepicker';\nimport CustomeTextInput from \"../TextInput/CustomTextInput\";\nimport styles from \"./styles\";\nimport RNDateTimePicker from '@react-native-community/datetimepicker';\n\nvar OrderFormModal = function OrderFormModal(props) {\n  var _useState = useState(new Date()),\n      _useState2 = _slicedToArray(_useState, 2),\n      date = _useState2[0],\n      setDate = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      showDatePicker = _useState4[0],\n      setShowDatePicker = _useState4[1];\n\n  var _useState5 = useState('date'),\n      _useState6 = _slicedToArray(_useState5, 2),\n      currentMood = _useState6[0],\n      setCurrentMood = _useState6[1];\n\n  var _useState7 = useState({\n    name: '',\n    surname: '',\n    number: '',\n    countFood: '',\n    countPerson: '',\n    date: new Date()\n  }),\n      _useState8 = _slicedToArray(_useState7, 2),\n      fields = _useState8[0],\n      changeFields = _useState8[1];\n\n  var onChange = function onChange(event, selectedDate) {\n    var currentDate = selectedDate || fields.date;\n    setShowDatePicker(Platform.OS === 'ios');\n    changeFields(_objectSpread(_objectSpread({}, fields), {}, {\n      date: currentDate\n    }));\n  };\n\n  return React.createElement(TouchableWithoutFeedback, {\n    onPress: function onPress() {\n      return props.clickToClose();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, React.createElement(TouchableWithoutFeedback, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  }, React.createElement(View, {\n    style: styles.contentWrap,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }, React.createElement(View, {\n    style: styles.inputsContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 25\n    }\n  }, React.createElement(View, {\n    style: styles.nameInput,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 29\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 33\n    }\n  }, \"Ad\"), React.createElement(CustomeTextInput, {\n    textContentType: \"givenName\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 33\n    }\n  })), React.createElement(View, {\n    style: styles.surnameInput,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 29\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 33\n    }\n  }, \"Soyad\"), React.createElement(CustomeTextInput, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 33\n    }\n  })), React.createElement(View, {\n    style: styles.number,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 29\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 33\n    }\n  }, \"Mobil N\\xF6mr\\u0259\"), React.createElement(CustomeTextInput, {\n    placeholder: \"0501234567\",\n    keyboardType: \"numeric\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 33\n    }\n  })), React.createElement(View, {\n    style: styles.amount,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 29\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 33\n    }\n  }, \"Ne\\xE7\\u0259 \\u018Fd\\u0259d\"), React.createElement(CustomeTextInput, {\n    keyboardType: \"numeric\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 33\n    }\n  })), React.createElement(View, {\n    style: styles.amount,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 29\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 33\n    }\n  }, \"Ne\\xE7\\u0259 N\\u0259f\\u0259r\"), React.createElement(CustomeTextInput, {\n    keyboardType: \"numeric\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 33\n    }\n  })), React.createElement(View, {\n    style: styles.dateAndTime,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 29\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: {\n      alignItems: 'center'\n    },\n    onPress: function onPress() {\n      setShowDatePicker(true);\n      setCurrentMood('date');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 37\n    }\n  }, React.createElement(View, {\n    style: styles.selectDateBtn,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 41\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 45\n    }\n  }, \"Tarix se\\xE7in\")), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 41\n    }\n  }, date.toLocaleDateString())), React.createElement(TouchableOpacity, {\n    style: {\n      alignItems: 'center'\n    },\n    onPress: function onPress() {\n      setCurrentMood('time');\n      setShowDatePicker(true);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 37\n    }\n  }, React.createElement(View, {\n    style: styles.selectTimeBtn,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 41\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 45\n    }\n  }, \"Zaman se\\xE7in\")), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 41\n    }\n  }, date.toLocaleTimeString().split(':')[0] + \":\" + date.toLocaleTimeString().split(':')[1])), showDatePicker && React.createElement(DateTimePicker, {\n    testID: \"dateTimePicker\",\n    value: fields.date,\n    mode: currentMood === 'date' ? 'date' : 'time',\n    is24Hour: true,\n    display: \"spinner\",\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 45\n    }\n  }))), React.createElement(View, {\n    style: styles.buttonsContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 25\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: [styles.button, styles.buttonCancel],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 29\n    }\n  }, React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 33\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 37\n    }\n  }, \"L\\u0259\\u011Fv et\"))), React.createElement(TouchableOpacity, {\n    style: [styles.button, styles.buttonConfirm],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 29\n    }\n  }, React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 33\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 37\n    }\n  }, \"T\\u0259sdiql\\u0259\"))))))));\n};\n\nexport default OrderFormModal;","map":{"version":3,"sources":["C:/Users/shohrat.garadaghli/Desktop/dev/orderApp/src/components/orderFormModal/OrderFormModal.js"],"names":["React","useState","DateTimePicker","CustomeTextInput","styles","RNDateTimePicker","OrderFormModal","props","Date","date","setDate","showDatePicker","setShowDatePicker","currentMood","setCurrentMood","name","surname","number","countFood","countPerson","fields","changeFields","onChange","event","selectedDate","currentDate","Platform","OS","clickToClose","container","contentWrap","inputsContainer","nameInput","surnameInput","amount","dateAndTime","alignItems","selectDateBtn","toLocaleDateString","selectTimeBtn","toLocaleTimeString","split","buttonsContainer","button","buttonCancel","buttonConfirm"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { View, Text, TextInput, TouchableWithoutFeedback, TouchableOpacity, Button, Alert, Platform} from 'react-native';\r\nimport DateTimePicker from '@react-native-community/datetimepicker';\r\n\r\n\r\n\r\nimport CustomeTextInput from '../TextInput/CustomTextInput';\r\nimport styles from './styles'\r\nimport RNDateTimePicker from '@react-native-community/datetimepicker';\r\n\r\n\r\nconst OrderFormModal=(props)=>{\r\n    const [date,setDate]=useState(new Date())\r\n    const [showDatePicker, setShowDatePicker]=useState(false);\r\n    const [currentMood, setCurrentMood]=useState('date');\r\n    const [fields,changeFields]=useState({\r\n        name:'',\r\n        surname:'',\r\n        number:'',\r\n        countFood:'',\r\n        countPerson:'',\r\n        date:new Date()\r\n    });\r\n\r\n    const onChange=(event, selectedDate)=>{\r\n        const currentDate=selectedDate || fields.date;\r\n        setShowDatePicker(Platform.OS==='ios');\r\n        changeFields({\r\n            ...fields,\r\n            date:currentDate\r\n        })\r\n    }\r\n    return (\r\n        <TouchableWithoutFeedback onPress={()=>props.clickToClose()}>\r\n            <View style={styles.container}>\r\n                <TouchableWithoutFeedback>\r\n                <View style={styles.contentWrap}>\r\n                        <View style={styles.inputsContainer}>\r\n                            <View style={styles.nameInput}>\r\n                                <Text>Ad</Text>\r\n                                <CustomeTextInput textContentType='givenName' />\r\n                            </View>\r\n                            <View style={styles.surnameInput}>\r\n                                <Text>Soyad</Text>\r\n                                <CustomeTextInput/>\r\n                            </View>\r\n                            <View style={styles.number}>\r\n                                <Text>Mobil Nömrə</Text>\r\n                                <CustomeTextInput placeholder='0501234567' keyboardType='numeric'/>\r\n                            </View>\r\n                            <View style={styles.amount}>\r\n                                <Text>Neçə Ədəd</Text>\r\n                                <CustomeTextInput keyboardType='numeric'/>\r\n                            </View>\r\n                            <View style={styles.amount}>\r\n                                <Text>Neçə Nəfər</Text>\r\n                                <CustomeTextInput keyboardType='numeric'/>\r\n                            </View>\r\n                            <View style={styles.dateAndTime}>\r\n                                    <TouchableOpacity style={{alignItems:'center'}} onPress={()=>{setShowDatePicker(true); setCurrentMood('date')}}>\r\n                                        <View style={styles.selectDateBtn}>\r\n                                            <Text>Tarix seçin</Text>\r\n                                        </View>\r\n                                        <Text>{date.toLocaleDateString()}</Text>\r\n                                    </TouchableOpacity>\r\n                                    <TouchableOpacity style={{alignItems:'center'}} onPress={()=>{setCurrentMood('time');setShowDatePicker(true)}}>\r\n                                        <View style={styles.selectTimeBtn}>\r\n                                            <Text>Zaman seçin</Text>\r\n                                        </View>\r\n                                        <Text>{`${date.toLocaleTimeString().split(':')[0]}:${date.toLocaleTimeString().split(':')[1]}`}</Text>\r\n                                    </TouchableOpacity>\r\n                                    {\r\n                                        showDatePicker && (\r\n                                            <DateTimePicker\r\n                                            testID=\"dateTimePicker\"\r\n                                            value={fields.date}\r\n                                            mode={currentMood==='date'?'date':'time'}\r\n                                            is24Hour={true}\r\n                                            display=\"spinner\"\r\n                                            onChange={onChange}\r\n                                        /> \r\n                                        )\r\n                                    }\r\n                            </View>\r\n\r\n                        </View>\r\n                        <View style={styles.buttonsContainer}>\r\n                            <TouchableOpacity style={[styles.button, styles.buttonCancel]}>\r\n                                <View>\r\n                                    <Text>\r\n                                        Ləğv et\r\n                                    </Text>\r\n                                </View>\r\n                            </TouchableOpacity>\r\n                            <TouchableOpacity style={[styles.button,styles.buttonConfirm]}>\r\n                                <View>\r\n                                    <Text>\r\n                                        Təsdiqlə\r\n                                    </Text>\r\n                                </View>\r\n                            </TouchableOpacity>\r\n                        </View>\r\n                    </View>\r\n                </TouchableWithoutFeedback>\r\n                                \r\n            </View>\r\n        </TouchableWithoutFeedback>\r\n    )\r\n}\r\nexport default OrderFormModal"]},"metadata":{},"sourceType":"module"}