{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport App from \"../API/firebaseConfig\";\nvar SET_AUTH_SUCCESS = \"SET_AUTH_SUCCESS\";\nvar SET_AUTH_LOGOUT = \"SET_AUTH_LOGOUT\";\nexport var MODULE_NAME = \"auth\";\nexport var selectAuthStatus = function selectAuthStatus(state) {\n  return state[MODULE_NAME].status;\n};\nexport var selectAuthUserID = function selectAuthUserID(state) {\n  return state[MODULE_NAME].userID;\n};\nexport var selectAuthUsername = function selectAuthUsername(state) {\n  return state[MODULE_NAME].username;\n};\nvar initialState = {\n  status: false,\n  userID: null,\n  username: null\n};\nexport function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n\n  var _ref = arguments.length > 1 ? arguments[1] : undefined,\n      type = _ref.type,\n      payload = _ref.payload;\n\n  switch (type) {\n    case SET_AUTH_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        status: true,\n        userID: payload.userID,\n        username: payload.username\n      });\n\n    case SET_AUTH_LOGOUT:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        status: false,\n        userID: null,\n        username: null\n      });\n\n    default:\n      return state;\n  }\n}\nexport var setAuthSuccess = function setAuthSuccess(payload) {\n  return {\n    type: SET_AUTH_SUCCESS,\n    payload: payload\n  };\n};\nexport var setAuthLogout = function setAuthLogout() {\n  return {\n    type: SET_AUTH_LOGOUT\n  };\n};\nexport var sign = function sign(email, password, username, isSignIn) {\n  return function _callee(dispatch) {\n    var uid, _await$App$auth$signI, userDataSnapshot, _userDataSnapshot$val, _await$App$auth$creat, user, _await$user, _uid;\n\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            console.log('inside sign method');\n            _context.prev = 1;\n\n            if (isSignIn) {\n              _context.next = 14;\n              break;\n            }\n\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(App.auth.signInWithEmailAndPassword(email, password));\n\n          case 5:\n            _await$App$auth$signI = _context.sent;\n            uid = _await$App$auth$signI.user.uid;\n            _context.next = 9;\n            return _regeneratorRuntime.awrap(App.db.ref(\"users/\" + uid).once(\"value\"));\n\n          case 9:\n            userDataSnapshot = _context.sent;\n            _userDataSnapshot$val = userDataSnapshot.val();\n            username = _userDataSnapshot$val.username;\n            _context.next = 23;\n            break;\n\n          case 14:\n            _context.next = 16;\n            return _regeneratorRuntime.awrap(App.auth.createUserWithEmailAndPassword(email, password));\n\n          case 16:\n            _await$App$auth$creat = _context.sent;\n            user = _await$App$auth$creat.user;\n            _context.next = 20;\n            return _regeneratorRuntime.awrap(user);\n\n          case 20:\n            _await$user = _context.sent;\n            _uid = _await$user.uid;\n            App.db.ref(\"users/\" + _uid).set({\n              username: username\n            });\n\n          case 23:\n            dispatch(setAuthSuccess({\n              userID: uid,\n              username: username\n            }));\n            _context.next = 29;\n            break;\n\n          case 26:\n            _context.prev = 26;\n            _context.t0 = _context[\"catch\"](1);\n            Alert.alert(_context.t0.message);\n\n          case 29:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[1, 26]], Promise);\n  };\n};\nexport var logOut = function logOut() {\n  return function _callee2(dispatch) {\n    return _regeneratorRuntime.async(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(App.auth.signOut());\n\n          case 3:\n            dispatch(setAuthLogout());\n            _context2.next = 9;\n            break;\n\n          case 6:\n            _context2.prev = 6;\n            _context2.t0 = _context2[\"catch\"](0);\n            Alert.alert(_context2.t0.message);\n\n          case 9:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 6]], Promise);\n  };\n};","map":{"version":3,"sources":["C:/Users/shohrat.garadaghli/Desktop/recipes-app-react-native/recipes-app-react-native/src/store/auth.js"],"names":["App","SET_AUTH_SUCCESS","SET_AUTH_LOGOUT","MODULE_NAME","selectAuthStatus","state","status","selectAuthUserID","userID","selectAuthUsername","username","initialState","reducer","type","payload","setAuthSuccess","setAuthLogout","sign","email","password","isSignIn","dispatch","console","log","auth","signInWithEmailAndPassword","uid","user","db","ref","once","userDataSnapshot","val","createUserWithEmailAndPassword","set","Alert","alert","message","logOut","signOut"],"mappings":"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","sourcesContent":["import { Alert } from \"react-native\";\r\nimport App from \"../API/firebaseConfig\";\r\n\r\n// ACTION TYPES\r\nconst SET_AUTH_SUCCESS = \"SET_AUTH_SUCCESS\";\r\nconst SET_AUTH_LOGOUT = \"SET_AUTH_LOGOUT\";\r\n/*const SET_AUTH_PHOTO = \"SET_AUTH_PHOTO\";*/\r\n\r\n// SELECTORS\r\nexport const MODULE_NAME = \"auth\";\r\nexport const selectAuthStatus = (state) => state[MODULE_NAME].status;\r\nexport const selectAuthUserID = (state) => state[MODULE_NAME].userID;\r\nexport const selectAuthUsername = (state) => state[MODULE_NAME].username;\r\n/*export const selectAuthPhoto = (state) => state[MODULE_NAME].photo;*/\r\n\r\n// REDUCER\r\nconst initialState = {\r\n  status: false,\r\n  userID: null,\r\n  username: null,\r\n  /*photo: null,*/\r\n};\r\n\r\nexport function reducer(state = initialState, { type, payload }) {\r\n  switch (type) {\r\n    case SET_AUTH_SUCCESS:\r\n      return {\r\n        ...state,\r\n        status: true,\r\n        userID: payload.userID,\r\n        username: payload.username,\r\n        /*photo: payload.photo,*/\r\n      };\r\n    case SET_AUTH_LOGOUT:\r\n      return {\r\n        ...state,\r\n        status: false,\r\n        userID: null,\r\n        username: null,\r\n      };\r\n    /*case SET_AUTH_PHOTO:\r\n      return {\r\n        ...state,\r\n        photo: payload,\r\n      };*/\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n// ACTION CREATORS\r\nexport const setAuthSuccess = (payload) => ({\r\n  type: SET_AUTH_SUCCESS,\r\n  payload,\r\n});\r\n/*export const setAuthPhoto = (payload) => ({\r\n  type: SET_AUTH_PHOTO,\r\n  payload,\r\n});*/\r\nexport const setAuthLogout = () => ({\r\n  type: SET_AUTH_LOGOUT,\r\n});\r\n\r\n// MIDDLEWARES\r\nexport const sign = (email, password, username, isSignIn) => async (\r\n  dispatch\r\n) => {\r\n    console.log('inside sign method');\r\n  try {\r\n    let uid /*, photo*/;\r\n    if (!isSignIn) {\r\n      ({\r\n        user: { uid },\r\n      } = await App.auth.signInWithEmailAndPassword(email, password));\r\n      const userDataSnapshot = await App.db.ref(`users/${uid}`).once(\"value\");\r\n      ({ username/*,photo*/ } = userDataSnapshot.val());\r\n    } else {\r\n      const {user} = await App.auth.createUserWithEmailAndPassword(email, password);\r\n      const {uid}=await user;\r\n      App.db.ref(`users/${uid}`).set({ username /*, photo: \"\" */});\r\n    }\r\n\r\n    dispatch(\r\n      setAuthSuccess({\r\n        userID: uid,\r\n        username,\r\n        /*photo,*/\r\n      })\r\n    );\r\n  } catch (error) {\r\n    Alert.alert(error.message);\r\n  }\r\n};\r\n\r\nexport const logOut = () => async (dispatch) => {\r\n  try {\r\n    await App.auth.signOut();\r\n    dispatch(setAuthLogout());\r\n  } catch (error) {\r\n    Alert.alert(error.message);\r\n  }\r\n};\r\n\r\n/*export const uploadAuthPhoto = (uri) => async (dispatch, getState) => {\r\n  try {\r\n    const userID = selectAuthUserID(getState());\r\n    // Transform image to Blob\r\n    const response = await fetch(uri);\r\n    const blob = await response.blob();\r\n    // Take unique key for name in storage\r\n    // Better to use some library like UUID\r\n    const key = App.db.ref(\"key\").push().key;\r\n    // Put image by key name in storage\r\n    const snap = await App.storage.ref(key).put(blob);\r\n    // Take url of image on firebase storage\r\n    const url = await snap.ref.getDownloadURL();\r\n\r\n    // Set photo in user database data\r\n    console.log(url);\r\n    App.db.ref(`users/${userID}/photo`).set(url);\r\n\r\n    // Set photo in store\r\n    dispatch(setAuthPhoto(url));\r\n  } catch (error) {\r\n    console.log(error);\r\n    Alert.alert(error.message);\r\n  }\r\n};*/\r\n"]},"metadata":{},"sourceType":"module"}