{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport React, { Component } from 'react';\nimport { recipes, categories, ingredients } from \"./dataArrays\";\nimport App from \"../API/firebaseConfig\";\nimport { connect } from 'react-redux';\nimport store from \"../store\";\nexport function getCategoryById(categoryId) {\n  var category;\n  categories.map(function (data) {\n    if (data.id == categoryId) {\n      category = data;\n    }\n  });\n  return category;\n}\nexport function getIngredientName(ingredientID) {\n  var name;\n  ingredients.map(function (data) {\n    if (data.ingredientId == ingredientID) {\n      name = data.name;\n    }\n  });\n  return name;\n}\nexport function getIngredientUrl(ingredientID) {\n  var url;\n  ingredients.map(function (data) {\n    if (data.ingredientId == ingredientID) {\n      url = data.photo_url;\n    }\n  });\n  return url;\n}\nexport function getCategoryName(categoryId) {\n  var name;\n  categories.map(function (data) {\n    if (data.id == categoryId) {\n      name = data.name;\n    }\n  });\n  return name;\n}\nexport function getRecipes(categoryId) {\n  var recipesArray = [];\n  recipes.map(function (data) {\n    if (data.categoryId == categoryId) {\n      recipesArray.push(data);\n    }\n  });\n  return recipesArray;\n}\nexport function getRecipesByIngredient(ingredientId) {\n  var recipesArray = [];\n  recipes.map(function (data) {\n    data.ingredients.map(function (index) {\n      if (index[0] == ingredientId) {\n        recipesArray.push(data);\n      }\n    });\n  });\n  return recipesArray;\n}\nexport function getNumberOfRecipes(categoryId) {\n  var products = store.getState().products;\n  var count = 0;\n\n  for (var key in products) {\n    if (products[key].categoryId == categoryId) {\n      count++;\n    }\n  }\n\n  return count;\n}\nexport function getAllIngredients(idArray) {\n  var ingredientsArray = [];\n  idArray.map(function (index) {\n    ingredients.map(function (data) {\n      if (data.ingredientId == index[0]) {\n        ingredientsArray.push([data, index[1]]);\n      }\n    });\n  });\n  return ingredientsArray;\n}\nexport function getRecipesByIngredientName(ingredientName) {\n  var nameUpper = ingredientName.toUpperCase();\n  var recipesArray = [];\n  ingredients.map(function (data) {\n    if (data.name.toUpperCase().includes(nameUpper)) {\n      var _recipes = getRecipesByIngredient(data.ingredientId);\n\n      var unique = _toConsumableArray(new Set(_recipes));\n\n      unique.map(function (item) {\n        recipesArray.push(item);\n      });\n    }\n  });\n\n  var uniqueArray = _toConsumableArray(new Set(recipesArray));\n\n  return uniqueArray;\n}\nexport function getRecipesByCategoryName(categoryName) {\n  var nameUpper = categoryName.toUpperCase();\n  var recipesArray = [];\n  categories.map(function (data) {\n    if (data.name.toUpperCase().includes(nameUpper)) {\n      var _recipes2 = getRecipes(data.id);\n\n      _recipes2.map(function (item) {\n        recipesArray.push(item);\n      });\n    }\n  });\n  return recipesArray;\n}\nexport function getRecipesByRecipeName(recipeName) {\n  var nameUpper = recipeName.toUpperCase();\n  var recipesArray = [];\n  recipes.map(function (data) {\n    if (data.title.toUpperCase().includes(nameUpper)) {\n      recipesArray.push(data);\n    }\n  });\n  return recipesArray;\n}\nexport function convertObToArr(obj) {\n  var resultArr = [];\n  Object.keys(obj).map(function (key) {\n    var curObj = {};\n    curObj[key] = obj[key];\n    resultArr = [].concat(_toConsumableArray(resultArr), [curObj]);\n  });\n  return resultArr;\n}\nexport function setAutoId(endpoint) {\n  App.db.ref(endpoint + \"/\").on('child_added', function (snapshot) {\n    App.db.ref(endpoint + \"/\" + snapshot.key).update({\n      id: snapshot.key\n    });\n    return snapshot.key;\n  });\n}","map":{"version":3,"sources":["C:/Users/shohrat.garadaghli/Desktop/dev/orderApp/src/data/MockDataAPI.js"],"names":["React","Component","recipes","categories","ingredients","App","connect","store","getCategoryById","categoryId","category","map","data","id","getIngredientName","ingredientID","name","ingredientId","getIngredientUrl","url","photo_url","getCategoryName","getRecipes","recipesArray","push","getRecipesByIngredient","index","getNumberOfRecipes","products","getState","count","key","getAllIngredients","idArray","ingredientsArray","getRecipesByIngredientName","ingredientName","nameUpper","toUpperCase","includes","unique","Set","item","uniqueArray","getRecipesByCategoryName","categoryName","getRecipesByRecipeName","recipeName","title","convertObToArr","obj","resultArr","Object","keys","curObj","setAutoId","endpoint","db","ref","on","snapshot","update"],"mappings":"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","sourcesContent":["import { Text } from 'react-native';\nimport React, { Component } from 'react';\nimport { recipes, categories, ingredients } from './dataArrays';\nimport App from '../API/firebaseConfig';\nimport { connect } from 'react-redux';\nimport store from '../store';\n\n\nexport function getCategoryById(categoryId) {\n  let category;\n  categories.map(data => {\n    if (data.id == categoryId) {\n      category = data;\n    }\n  });\n  return category;\n}\n\nexport function getIngredientName(ingredientID) {\n  let name;\n  ingredients.map(data => {\n    if (data.ingredientId == ingredientID) {\n      name = data.name;\n    }\n  });\n  return name;\n}\n\nexport function getIngredientUrl(ingredientID) {\n  let url;\n  ingredients.map(data => {\n    if (data.ingredientId == ingredientID) {\n      url = data.photo_url;\n    }\n  });\n  return url;\n}\n\nexport function getCategoryName(categoryId) {\n  let name;\n  categories.map(data => {\n    if (data.id == categoryId) {\n      name = data.name;\n    }\n  });\n  return name;\n}\n\nexport function getRecipes(categoryId) {\n  const recipesArray = [];\n  recipes.map(data => {\n    if (data.categoryId == categoryId) {\n      recipesArray.push(data);\n    }\n  });\n  return recipesArray;\n}\n\n// modifica\nexport function getRecipesByIngredient(ingredientId) {\n  const recipesArray = [];\n  recipes.map(data => {\n    data.ingredients.map(index => {\n      if (index[0] == ingredientId) {\n        recipesArray.push(data);\n      }\n    });\n  });\n  return recipesArray;\n}\n\n// const mapStateToProps=(state)=>({\n//   products:state.products\n// })\nexport function getNumberOfRecipes(categoryId) {\n  const products=store.getState().products;\n  let count = 0;\n  for (let key in products){\n    if (products[key].categoryId == categoryId) {\n      count++;\n    }\n  }\n  return count;\n}\n\nexport function getAllIngredients(idArray) {\n  const ingredientsArray = [];\n  idArray.map(index => {\n    ingredients.map(data => {\n      if (data.ingredientId == index[0]) {\n        ingredientsArray.push([data, index[1]]);\n      }\n    });\n  });\n  return ingredientsArray;\n}\n\n// functions for search\nexport function getRecipesByIngredientName(ingredientName) {\n  const nameUpper = ingredientName.toUpperCase();\n  const recipesArray = [];\n  ingredients.map(data => {\n    if (data.name.toUpperCase().includes(nameUpper)) {\n      // data.name.yoUpperCase() == nameUpper\n      const recipes = getRecipesByIngredient(data.ingredientId);\n      const unique = [...new Set(recipes)];\n      unique.map(item => {\n        recipesArray.push(item);\n      });\n    }\n  });\n  const uniqueArray = [...new Set(recipesArray)];\n  return uniqueArray;\n}\n\nexport function getRecipesByCategoryName(categoryName) {\n  const nameUpper = categoryName.toUpperCase();\n  const recipesArray = [];\n  categories.map(data => {\n    if (data.name.toUpperCase().includes(nameUpper)) {\n      const recipes = getRecipes(data.id); // return a vector of recipes\n      recipes.map(item => {\n        recipesArray.push(item);\n      });\n    }\n  });\n  return recipesArray;\n}\n\nexport function getRecipesByRecipeName(recipeName) {\n  const nameUpper = recipeName.toUpperCase();\n  const recipesArray = [];\n  recipes.map(data => {\n    if (data.title.toUpperCase().includes(nameUpper)) {\n      recipesArray.push(data);\n    }\n  });\n  return recipesArray;\n}\n\nexport function convertObToArr(obj){\n  let resultArr=[];\n  Object.keys(obj).map(key=>{\n    let curObj={};\n    curObj[key]=obj[key]\n    resultArr=[...resultArr,curObj]\n  })\n  return resultArr\n}\n\nexport function setAutoId(endpoint){\n  App.db.ref(`${endpoint}/`).on('child_added', function(snapshot) {\n    App.db.ref(`${endpoint}/${snapshot.key}`).update({\n      id:snapshot.key\n    })\n    return snapshot.key; // -KJ....\n  })\n}"]},"metadata":{},"sourceType":"module"}