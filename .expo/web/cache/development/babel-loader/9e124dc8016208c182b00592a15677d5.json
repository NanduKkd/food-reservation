{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\shohrat.garadaghli\\\\Desktop\\\\dev\\\\orderApp\\\\src\\\\screens\\\\Recipe\\\\RecipeScreen.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport styles from \"./styles\";\nimport Carousel, { Pagination } from 'react-native-snap-carousel';\nimport { getIngredientName, getCategoryName, getCategoryById } from \"../../data/MockDataAPI\";\nimport BackButton from \"../../components/BackButton/BackButton\";\nimport ViewIngredientsButton from \"../../components/ViewIngredientsButton/ViewIngredientsButton\";\nimport PlaceOrderButton from \"../../components/PlaceOrderButton/PlaceOrder\";\n\nvar _Dimensions$get = Dimensions.get('window'),\n    viewportWidth = _Dimensions$get.width;\n\nvar RecipeScreen = function (_React$Component) {\n  _inherits(RecipeScreen, _React$Component);\n\n  var _super = _createSuper(RecipeScreen);\n\n  function RecipeScreen(props) {\n    var _this;\n\n    _classCallCheck(this, RecipeScreen);\n\n    _this = _super.call(this, props);\n\n    _this.renderImage = function (_ref) {\n      var item = _ref.item;\n      return React.createElement(TouchableHighlight, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 5\n        }\n      }, React.createElement(View, {\n        style: styles.imageContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 7\n        }\n      }, React.createElement(Image, {\n        style: styles.image,\n        source: {\n          uri: item\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 9\n        }\n      })));\n    };\n\n    _this.onPressIngredient = function (item) {\n      var name = getIngredientName(item);\n      var ingredient = item;\n\n      _this.props.navigation.navigate('Ingredient', {\n        ingredient: ingredient,\n        name: name\n      });\n    };\n\n    _this.orderSuccess = function () {\n      _this.setState(_objectSpread(_objectSpread({}, _this.state), {}, {\n        orderSuccess: true\n      }));\n    };\n\n    _this.orderFailed = function () {\n      _this.setState(_objectSpread(_objectSpread({}, _this.state), {}, {\n        orderSuccess: false\n      }));\n    };\n\n    _this.orderStart = function () {\n      _this.setState(_objectSpread(_objectSpread({}, _this.state), {}, {\n        orderStart: true\n      }));\n    };\n\n    _this.state = {\n      activeSlide: 0,\n      orderSuccess: null,\n      orderStart: false\n    };\n    return _this;\n  }\n\n  _createClass(RecipeScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var activeSlide = this.state.activeSlide;\n      var navigation = this.props.navigation;\n      var item = navigation.getParam('item');\n      var category = getCategoryById(item.categoryId);\n      var title = getCategoryName(category.id);\n      console.log('item:', item);\n      return React.createElement(ScrollView, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: styles.carouselContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: styles.carousel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }\n      }, React.createElement(Carousel, {\n        ref: function ref(c) {\n          _this2.slider1Ref = c;\n        },\n        data: item.photosArray,\n        renderItem: this.renderImage,\n        sliderWidth: viewportWidth,\n        itemWidth: viewportWidth,\n        inactiveSlideScale: 1,\n        inactiveSlideOpacity: 1,\n        firstItem: 0,\n        loop: false,\n        autoplay: false,\n        autoplayDelay: 500,\n        autoplayInterval: 3000,\n        onSnapToItem: function onSnapToItem(index) {\n          return _this2.setState({\n            activeSlide: index\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }\n      }), React.createElement(Pagination, {\n        dotsLength: item.photosArray.length,\n        activeDotIndex: activeSlide,\n        containerStyle: styles.paginationContainer,\n        dotColor: \"rgba(255, 255, 255, 0.92)\",\n        dotStyle: styles.paginationDot,\n        inactiveDotColor: \"white\",\n        inactiveDotOpacity: 0.4,\n        inactiveDotScale: 0.6,\n        carouselRef: this.slider1Ref,\n        tappableDots: !!this.slider1Ref,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }\n      }))), React.createElement(View, {\n        style: styles.infoRecipeContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: styles.infoRecipeName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }\n      }, item.title), React.createElement(View, {\n        style: styles.infoContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }\n      }, React.createElement(TouchableHighlight, {\n        onPress: function onPress() {\n          return navigation.navigate('RecipesList', {\n            category: category,\n            title: title\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: styles.category,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 15\n        }\n      }, getCategoryName(item.categoryId).toUpperCase()))), React.createElement(View, {\n        style: styles.infoContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }\n      }, React.createElement(Image, {\n        style: styles.infoPhoto,\n        source: require(\"../../../assets/icons/time.png\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }\n      }), React.createElement(Text, {\n        style: styles.infoRecipe,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }\n      }, item.time, \" minutes \")), React.createElement(View, {\n        style: styles.infoContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }\n      }, React.createElement(ViewIngredientsButton, {\n        onPress: function onPress() {\n          var ingredients = item.ingredients;\n          var title = 'Ingredients for ' + item.title;\n          navigation.navigate('IngredientsDetails', {\n            ingredients: ingredients,\n            title: title\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }\n      }), React.createElement(PlaceOrderButton, {\n        orderStart: this.orderStart,\n        orderSuccess: this.orderSuccess,\n        item: item,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 13\n        }\n      }), this.state.orderSuccess ? React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 39\n        }\n      }, \"Success\") : this.state.orderSuccess === false ? React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 49\n        }\n      }, \"Failed\") : React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 69\n        }\n      }, \"loading...\")), React.createElement(View, {\n        style: styles.infoContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: styles.infoDescriptionRecipe,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 13\n        }\n      }, item.description))));\n    }\n  }]);\n\n  return RecipeScreen;\n}(React.Component);\n\nRecipeScreen.navigationOptions = function (_ref2) {\n  var navigation = _ref2.navigation;\n  return {\n    headerTransparent: 'true',\n    headerLeft: React.createElement(BackButton, {\n      onPress: function onPress() {\n        navigation.goBack();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }\n    })\n  };\n};\n\nexport { RecipeScreen as default };","map":{"version":3,"sources":["C:/Users/shohrat.garadaghli/Desktop/dev/orderApp/src/screens/Recipe/RecipeScreen.js"],"names":["React","styles","Carousel","Pagination","getIngredientName","getCategoryName","getCategoryById","BackButton","ViewIngredientsButton","PlaceOrderButton","Dimensions","get","viewportWidth","width","RecipeScreen","props","renderImage","item","imageContainer","image","uri","onPressIngredient","name","ingredient","navigation","navigate","orderSuccess","setState","state","orderFailed","orderStart","activeSlide","getParam","category","categoryId","title","id","console","log","container","carouselContainer","carousel","c","slider1Ref","photosArray","index","length","paginationContainer","paginationDot","infoRecipeContainer","infoRecipeName","infoContainer","toUpperCase","infoPhoto","require","infoRecipe","time","ingredients","infoDescriptionRecipe","description","Component","navigationOptions","headerTransparent","headerLeft","goBack"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  FlatList,\n  ScrollView,\n  Text,\n  View,\n  TouchableOpacity,\n  Image,\n  Dimensions,\n  TouchableHighlight\n} from 'react-native';\nimport styles from './styles';\nimport Carousel, { Pagination } from 'react-native-snap-carousel';\nimport { getIngredientName, getCategoryName, getCategoryById } from '../../data/MockDataAPI';\nimport BackButton from '../../components/BackButton/BackButton';\nimport ViewIngredientsButton from '../../components/ViewIngredientsButton/ViewIngredientsButton';\nimport PlaceOrderButton from '../../components/PlaceOrderButton/PlaceOrder';\n\nconst { width: viewportWidth } = Dimensions.get('window');\n\nexport default class RecipeScreen extends React.Component {\n  static navigationOptions = ({ navigation }) => {\n    return {\n      headerTransparent: 'true',\n      headerLeft: (\n        <BackButton\n          onPress={() => {\n            navigation.goBack();\n          }}\n        />\n      )\n    };\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeSlide: 0,\n      orderSuccess:null,\n      orderStart:false\n    };\n  }\n\n  renderImage = ({ item }) => (\n    <TouchableHighlight>\n      <View style={styles.imageContainer}>\n        <Image style={styles.image} source={{ uri: item }} />\n      </View>\n    </TouchableHighlight>\n  );\n\n  onPressIngredient = item => {\n    var name = getIngredientName(item);\n    let ingredient = item;\n    this.props.navigation.navigate('Ingredient', { ingredient, name });\n  };\n  orderSuccess=()=>{\n    this.setState({\n      ...this.state,\n      orderSuccess:true\n    })\n  };\n  orderFailed=()=>{\n    this.setState({\n      ...this.state,\n      orderSuccess:false\n    })\n  }\n  orderStart=()=>{\n    this.setState({\n      ...this.state,\n      orderStart:true\n    })\n  }\n  render() {\n    const { activeSlide } = this.state;\n    const { navigation } = this.props;\n    const item = navigation.getParam('item');\n    const category = getCategoryById(item.categoryId);\n    const title = getCategoryName(category.id);\n    console.log('item:',item);\n    return (\n      <ScrollView style={styles.container}>\n        <View style={styles.carouselContainer}>\n          <View style={styles.carousel}>\n            <Carousel\n              ref={c => {\n                this.slider1Ref = c;\n              }}\n              data={item.photosArray}\n              renderItem={this.renderImage}\n              sliderWidth={viewportWidth}\n              itemWidth={viewportWidth}\n              inactiveSlideScale={1}\n              inactiveSlideOpacity={1}\n              firstItem={0}\n              loop={false}\n              autoplay={false}\n              autoplayDelay={500}\n              autoplayInterval={3000}\n              onSnapToItem={index => this.setState({ activeSlide: index })}\n            />\n            <Pagination\n              dotsLength={item.photosArray.length}\n              activeDotIndex={activeSlide}\n              containerStyle={styles.paginationContainer}\n              dotColor=\"rgba(255, 255, 255, 0.92)\"\n              dotStyle={styles.paginationDot}\n              inactiveDotColor=\"white\"\n              inactiveDotOpacity={0.4}\n              inactiveDotScale={0.6}\n              carouselRef={this.slider1Ref}\n              tappableDots={!!this.slider1Ref}\n            />\n          </View>\n        </View>\n        <View style={styles.infoRecipeContainer}>\n          <Text style={styles.infoRecipeName}>{item.title}</Text>\n          <View style={styles.infoContainer}>\n            <TouchableHighlight\n              onPress={() => navigation.navigate('RecipesList', { category, title })}\n            >\n              <Text style={styles.category}>{getCategoryName(item.categoryId).toUpperCase()}</Text>\n            </TouchableHighlight>\n          </View>\n\n          <View style={styles.infoContainer}>\n            <Image style={styles.infoPhoto} source={require('../../../assets/icons/time.png')} />\n            <Text style={styles.infoRecipe}>{item.time} minutes </Text>\n          </View>\n\n          <View style={styles.infoContainer}>\n            <ViewIngredientsButton\n              onPress={() => {\n                let ingredients = item.ingredients;\n                let title = 'Ingredients for ' + item.title;\n                navigation.navigate('IngredientsDetails', { ingredients, title });\n              }}\n            />\n            <PlaceOrderButton orderStart={this.orderStart} orderSuccess={this.orderSuccess} item={item}/>\n            {\n              this.state.orderSuccess?<Text>Success</Text>:\n                this.state.orderSuccess===false?<Text>Failed</Text>:<Text>loading...</Text>\n            }\n          </View>\n          <View style={styles.infoContainer}>\n            <Text style={styles.infoDescriptionRecipe}>{item.description}</Text>\n          </View>\n        </View>\n      </ScrollView>\n    );\n  }\n}\n\n/*cooking steps\n<View style={styles.infoContainer}>\n  <Image style={styles.infoPhoto} source={require('../../../assets/icons/info.png')} />\n  <Text style={styles.infoRecipe}>Cooking Steps</Text>\n</View>\n<Text style={styles.infoDescriptionRecipe}>{item.description}</Text>\n*/\n"]},"metadata":{},"sourceType":"module"}