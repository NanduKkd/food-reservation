{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\shohrat.garadaghli\\\\Desktop\\\\dev\\\\orderApp\\\\src\\\\components\\\\orderFormModal\\\\OrderFormModal.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport CustomeTextInput from \"../TextInput/CustomTextInput\";\nimport styles from \"./styles\";\n\nvar OrderFormModal = function OrderFormModal(props) {\n  var today = new Date();\n\n  var _useState = useState(new Date()),\n      _useState2 = _slicedToArray(_useState, 2),\n      date = _useState2[0],\n      setDate = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      showDatePicker = _useState4[0],\n      setShowDatePicker = _useState4[1];\n\n  var _useState5 = useState('date'),\n      _useState6 = _slicedToArray(_useState5, 2),\n      currentMood = _useState6[0],\n      setCurrentMood = _useState6[1];\n\n  var _useState7 = useState({\n    name: '',\n    surname: '',\n    number: '',\n    countFood: '',\n    countPerson: '',\n    dateOnly: today.toLocaleDateString(),\n    timeOnly: today.toLocaleTimeString().split(':')[0] + \":\" + today.toLocaleTimeString().split(':')[1]\n  }),\n      _useState8 = _slicedToArray(_useState7, 2),\n      fields = _useState8[0],\n      changeFields = _useState8[1];\n\n  var onChangeDate = function onChangeDate(event, selectedDate) {\n    var currentDate = selectedDate || date;\n    setShowDatePicker(Platform.OS === 'ios');\n    setDate(currentDate);\n    changeFields(_objectSpread(_objectSpread({}, fields), {}, {\n      dateOnly: currentDate.toLocaleDateString()\n    }));\n  };\n\n  var onChangeTime = function onChangeTime(event, selectedDate) {\n    var currentDate = selectedDate || date;\n    setShowDatePicker(Platform.OS === 'ios');\n    changeFields(_objectSpread(_objectSpread({}, fields), {}, {\n      timeOnly: currentDate.toLocaleTimeString().split(':')[0] + \":\" + currentDate.toLocaleTimeString().split(':')[1]\n    }));\n  };\n\n  var onChangeInputHandler = function onChangeInputHandler(fieldName, value) {\n    changeFields(_objectSpread(_objectSpread({}, fields), {}, _defineProperty({}, fieldName, value)));\n  };\n\n  return React.createElement(TouchableWithoutFeedback, {\n    onPress: function onPress() {\n      return props.clickToClose();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, React.createElement(TouchableWithoutFeedback, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }, React.createElement(View, {\n    style: styles.contentWrap,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }, React.createElement(View, {\n    style: styles.inputsContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 25\n    }\n  }, React.createElement(View, {\n    style: styles.nameInput,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 29\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 33\n    }\n  }, \"Ad\"), React.createElement(CustomeTextInput, {\n    value: fields,\n    textContentType: \"givenName\",\n    onChangeText: function onChangeText(value) {\n      return onChangeInputHandler('name', value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 33\n    }\n  })), React.createElement(View, {\n    style: styles.surnameInput,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 29\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 33\n    }\n  }, \"Soyad\"), React.createElement(CustomeTextInput, {\n    onChangeText: function onChangeText(value) {\n      return onChangeInputHandler('surname', value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 33\n    }\n  })), React.createElement(View, {\n    style: styles.number,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 29\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 33\n    }\n  }, \"Mobil N\\xF6mr\\u0259\"), React.createElement(CustomeTextInput, {\n    placeholder: \"0501234567\",\n    keyboardType: \"numeric\",\n    onChangeText: function onChangeText(value) {\n      return onChangeInputHandler('number', value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 33\n    }\n  })), React.createElement(View, {\n    style: styles.amount,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 29\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 33\n    }\n  }, \"Ne\\xE7\\u0259 \\u018Fd\\u0259d\"), React.createElement(CustomeTextInput, {\n    keyboardType: \"numeric\",\n    onChangeText: function onChangeText(value) {\n      return onChangeInputHandler('countFood', value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 33\n    }\n  })), React.createElement(View, {\n    style: styles.amount,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 29\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 33\n    }\n  }, \"Ne\\xE7\\u0259 N\\u0259f\\u0259r\"), React.createElement(CustomeTextInput, {\n    keyboardType: \"numeric\",\n    onChangeText: function onChangeText(value) {\n      return onChangeInputHandler('countPerson', value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 33\n    }\n  })), React.createElement(View, {\n    style: styles.dateAndTime,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 29\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: {\n      alignItems: 'center'\n    },\n    onPress: function onPress() {\n      setShowDatePicker(true);\n      setCurrentMood('date');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 37\n    }\n  }, React.createElement(View, {\n    style: styles.selectDateBtn,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 41\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 45\n    }\n  }, \"Tarix se\\xE7in\")), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 41\n    }\n  }, fields.dateOnly)), React.createElement(TouchableOpacity, {\n    style: {\n      alignItems: 'center'\n    },\n    onPress: function onPress() {\n      setCurrentMood('time');\n      setShowDatePicker(true);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 37\n    }\n  }, React.createElement(View, {\n    style: styles.selectTimeBtn,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 41\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 45\n    }\n  }, \"Zaman se\\xE7in\")), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 41\n    }\n  }, fields.timeOnly)))), React.createElement(View, {\n    style: styles.buttonsContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 25\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return props.clickToClose();\n    },\n    style: [styles.button, styles.buttonCancel],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 29\n    }\n  }, React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 33\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 37\n    }\n  }, \"L\\u0259\\u011Fv et\"))), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      props.submitOrderHandler(fields);\n    },\n    style: [styles.button, styles.buttonConfirm],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 29\n    }\n  }, React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 33\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: 'white'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 37\n    }\n  }, \"T\\u0259sdiql\\u0259\"))))))));\n};\n\nexport default OrderFormModal;","map":{"version":3,"sources":["C:/Users/shohrat.garadaghli/Desktop/dev/orderApp/src/components/orderFormModal/OrderFormModal.js"],"names":["React","useState","CustomeTextInput","styles","OrderFormModal","props","today","Date","date","setDate","showDatePicker","setShowDatePicker","currentMood","setCurrentMood","name","surname","number","countFood","countPerson","dateOnly","toLocaleDateString","timeOnly","toLocaleTimeString","split","fields","changeFields","onChangeDate","event","selectedDate","currentDate","Platform","OS","onChangeTime","onChangeInputHandler","fieldName","value","clickToClose","container","contentWrap","inputsContainer","nameInput","surnameInput","amount","dateAndTime","alignItems","selectDateBtn","selectTimeBtn","buttonsContainer","button","buttonCancel","submitOrderHandler","buttonConfirm","color"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { View, Text, TextInput, TouchableWithoutFeedback, TouchableOpacity, Button, Alert, Platform} from 'react-native';\r\n//import DateTimePicker from '@react-native-community/datetimepicker';\r\n\r\n\r\n\r\nimport CustomeTextInput from '../TextInput/CustomTextInput';\r\nimport styles from './styles'\r\n//import RNDateTimePicker from '@react-native-community/datetimepicker';\r\n\r\n\r\nconst OrderFormModal=(props)=>{\r\n    const today=new Date();\r\n    const [date,setDate]=useState(new Date())\r\n    const [showDatePicker, setShowDatePicker]=useState(false);\r\n    const [currentMood, setCurrentMood]=useState('date');\r\n    const [fields,changeFields]=useState({\r\n        name:'',\r\n        surname:'',\r\n        number:'',\r\n        countFood:'',\r\n        countPerson:'',\r\n        dateOnly:today.toLocaleDateString(),\r\n        timeOnly:`${today.toLocaleTimeString().split(':')[0]}:${today.toLocaleTimeString().split(':')[1]}`\r\n    })\r\n\r\n    const onChangeDate=(event, selectedDate)=>{\r\n        const currentDate=selectedDate || date;\r\n        setShowDatePicker(Platform.OS==='ios');\r\n        setDate(currentDate);\r\n        changeFields({\r\n            ...fields,\r\n            dateOnly:currentDate.toLocaleDateString(),\r\n        })\r\n    }\r\n    const onChangeTime=(event, selectedDate)=>{\r\n        const currentDate=selectedDate || date;\r\n        setShowDatePicker(Platform.OS==='ios');\r\n        changeFields({\r\n            ...fields,\r\n            timeOnly:`${currentDate.toLocaleTimeString().split(':')[0]}:${currentDate.toLocaleTimeString().split(':')[1]}`\r\n        })\r\n    }\r\n    const onChangeInputHandler=(fieldName,value)=>{\r\n        changeFields({\r\n            ...fields,\r\n            [fieldName]:value\r\n        })\r\n        \r\n    }\r\n    return (\r\n        <TouchableWithoutFeedback onPress={()=>props.clickToClose()}>\r\n            <View style={styles.container}>\r\n                <TouchableWithoutFeedback>\r\n                <View style={styles.contentWrap}>\r\n                        <View style={styles.inputsContainer}>\r\n                            <View style={styles.nameInput}>\r\n                                <Text>Ad</Text>\r\n                                <CustomeTextInput value={fields} textContentType='givenName' onChangeText={(value)=>onChangeInputHandler('name',value)}  />\r\n                            </View>\r\n                            <View style={styles.surnameInput}>\r\n                                <Text>Soyad</Text>\r\n                                <CustomeTextInput onChangeText={(value)=>onChangeInputHandler('surname',value)}/>\r\n                            </View>\r\n                            <View style={styles.number}>\r\n                                <Text>Mobil Nömrə</Text>\r\n                                <CustomeTextInput placeholder='0501234567' keyboardType='numeric' onChangeText={(value)=>onChangeInputHandler('number',value)}/>\r\n                            </View>\r\n                            <View style={styles.amount}>\r\n                                <Text>Neçə Ədəd</Text>\r\n                                <CustomeTextInput keyboardType='numeric' onChangeText={(value)=>onChangeInputHandler('countFood',value)}/>\r\n                            </View>\r\n                            <View style={styles.amount}>\r\n                                <Text>Neçə Nəfər</Text>\r\n                                <CustomeTextInput keyboardType='numeric' onChangeText={(value)=>onChangeInputHandler('countPerson',value)}/>\r\n                            </View>\r\n                            <View style={styles.dateAndTime}>\r\n                                    <TouchableOpacity style={{alignItems:'center'}} onPress={()=>{setShowDatePicker(true); setCurrentMood('date')}}>\r\n                                        <View style={styles.selectDateBtn}>\r\n                                            <Text>Tarix seçin</Text>\r\n                                        </View>\r\n                                        <Text>{fields.dateOnly}</Text>\r\n                                    </TouchableOpacity>\r\n                                    <TouchableOpacity style={{alignItems:'center'}} onPress={()=>{setCurrentMood('time');setShowDatePicker(true)}}>\r\n                                        <View style={styles.selectTimeBtn}>\r\n                                            <Text>Zaman seçin</Text>\r\n                                        </View>\r\n                                        <Text>{fields.timeOnly}</Text>\r\n                                    </TouchableOpacity>\r\n                                    {/*\r\n                                        showDatePicker && (\r\n                                            <DateTimePicker\r\n                                            testID=\"dateTimePicker\"\r\n                                            value={date}\r\n                                            mode={currentMood==='date'?'date':'time'}\r\n                                            is24Hour={true}\r\n                                            display=\"default\"\r\n                                            onChange={currentMood==='date'?onChangeDate:onChangeTime}\r\n                                        /> \r\n                                        )\r\n                                        */}\r\n                            </View>\r\n\r\n                        </View>\r\n                        <View style={styles.buttonsContainer}>\r\n                            <TouchableOpacity onPress={()=>props.clickToClose()} style={[styles.button, styles.buttonCancel]}>\r\n                                <View>\r\n                                    <Text>\r\n                                        Ləğv et\r\n                                    </Text>\r\n                                </View>\r\n                            </TouchableOpacity>\r\n                            <TouchableOpacity onPress={()=>{\r\n\r\n                                props.submitOrderHandler(fields)\r\n\r\n                                }} style={[styles.button,styles.buttonConfirm]}>\r\n                                <View>\r\n                                    <Text style={{color:'white'}}>\r\n                                        Təsdiqlə\r\n                                    </Text>\r\n                                </View>\r\n                            </TouchableOpacity>\r\n                        </View>\r\n                    </View>\r\n                </TouchableWithoutFeedback>\r\n                                \r\n            </View>\r\n        </TouchableWithoutFeedback>\r\n    )\r\n}\r\nexport default OrderFormModal"]},"metadata":{},"sourceType":"module"}