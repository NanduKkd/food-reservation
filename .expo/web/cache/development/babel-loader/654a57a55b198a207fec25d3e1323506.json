{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\shohrat.garadaghli\\\\Desktop\\\\dev\\\\orderApp\\\\src\\\\screens\\\\Edit\\\\EditScreen.js\";\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { connect } from 'react-redux';\nimport { convertObToArr, getCategoryName } from \"../../data/MockDataAPI\";\nimport SingleProductEditScreen from \"../singleProductEdit/SingleProductEditScreen\";\nimport styles from \"./styles\";\n\nvar createNewProduct = function createNewProduct() {};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    productsKeyInEdit: state.products\n  };\n};\n\nvar EditScreen = connect(mapStateToProps)(function (props) {\n  console.log('props in Edit page: ', convertObToArr(props.productsKeyInEdit));\n\n  var productEditHandler = function productEditHandler(item) {\n    _this.props.navigation.navigate('SingleProductEdit', {\n      item: item\n    });\n  };\n\n  var renderProducts = function renderProducts(_ref) {\n    var item = _ref.item;\n    item = Object.values(item)[0];\n    return React.createElement(TouchableHighlight, {\n      underlayColor: \"rgba(73,182,77,1,0.9)\",\n      onPress: function onPress() {\n        return productEditHandler(item);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 7\n      }\n    }, React.createElement(View, {\n      style: styles.container,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }\n    }, React.createElement(Image, {\n      style: styles.photo,\n      source: {\n        uri: item.photo_url\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }\n    }), React.createElement(Text, {\n      style: styles.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }\n    }, item.title), React.createElement(Text, {\n      style: styles.category,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }\n    }, getCategoryName(item.categoryId))));\n  };\n\n  return React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, React.createElement(FlatList, {\n    vertical: true,\n    showsVerticalScrollIndicator: true,\n    numColumns: 2,\n    data: convertObToArr(props.productsKeyInEdit),\n    renderItem: renderProducts,\n    keyExtractor: function keyExtractor(item) {\n      return \"\" + item.recipeId;\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }), React.createElement(Button, {\n    title: \"create product\",\n    onPress: function onPress() {\n      return createNewProduct();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }));\n});\nexport default EditScreen;","map":{"version":3,"sources":["C:/Users/shohrat.garadaghli/Desktop/dev/orderApp/src/screens/Edit/EditScreen.js"],"names":["React","connect","convertObToArr","getCategoryName","SingleProductEditScreen","styles","createNewProduct","mapStateToProps","state","productsKeyInEdit","products","EditScreen","props","console","log","productEditHandler","item","navigation","navigate","renderProducts","Object","values","container","photo","uri","photo_url","title","category","categoryId","recipeId"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;;;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,cAAT,EAAyBC,eAAzB;AACA,OAAOC,uBAAP;AACA,OAAOC,MAAP;;AAGA,IAAMC,gBAAgB,GAAC,SAAjBA,gBAAiB,GAAI,CAE1B,CAFD;;AAIA,IAAMC,eAAe,GAAC,SAAhBA,eAAgB,CAACC,KAAD;AAAA,SAAU;AAC5BC,IAAAA,iBAAiB,EAACD,KAAK,CAACE;AADI,GAAV;AAAA,CAAtB;;AAGA,IAAMC,UAAU,GAAGV,OAAO,CAACM,eAAD,CAAP,CAAyB,UAACK,KAAD,EAAS;AACjDC,EAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAmCZ,cAAc,CAACU,KAAK,CAACH,iBAAP,CAAjD;;AAEA,MAAMM,kBAAkB,GAAC,SAAnBA,kBAAmB,CAACC,IAAD,EAAQ;AAC/B,IAAA,KAAI,CAACJ,KAAL,CAAWK,UAAX,CAAsBC,QAAtB,CAA+B,mBAA/B,EAAoD;AAAEF,MAAAA,IAAI,EAAJA;AAAF,KAApD;AACD,GAFD;;AAIA,MAAMG,cAAc,GAAG,SAAjBA,cAAiB,OAAc;AAAA,QAAXH,IAAW,QAAXA,IAAW;AACnCA,IAAAA,IAAI,GAACI,MAAM,CAACC,MAAP,CAAcL,IAAd,EAAoB,CAApB,CAAL;AACA,WACA,oBAAC,kBAAD;AAAoB,MAAA,aAAa,EAAC,uBAAlC;AAA0D,MAAA,OAAO,EAAE;AAAA,eAAMD,kBAAkB,CAACC,IAAD,CAAxB;AAAA,OAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEX,MAAM,CAACiB,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAEjB,MAAM,CAACkB,KAArB;AAA4B,MAAA,MAAM,EAAE;AAAEC,QAAAA,GAAG,EAAER,IAAI,CAACS;AAAZ,OAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEpB,MAAM,CAACqB,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4BV,IAAI,CAACU,KAAjC,CAFF,EAGE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAErB,MAAM,CAACsB,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA+BxB,eAAe,CAACa,IAAI,CAACY,UAAN,CAA9C,CAHF,CADF,CADA;AAQA,GAVF;;AAYA,SACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,QAAD;AACA,IAAA,QAAQ,MADR;AAEA,IAAA,4BAA4B,EAAE,IAF9B;AAGA,IAAA,UAAU,EAAE,CAHZ;AAIA,IAAA,IAAI,EAAG1B,cAAc,CAACU,KAAK,CAACH,iBAAP,CAJrB;AAKA,IAAA,UAAU,EAAEU,cALZ;AAMA,IAAA,YAAY,EAAE,sBAAAH,IAAI;AAAA,kBAAOA,IAAI,CAACa,QAAZ;AAAA,KANlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EASI,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,gBAAd;AAA+B,IAAA,OAAO,EAAE;AAAA,aAAIvB,gBAAgB,EAApB;AAAA,KAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATJ,CADJ;AAaH,CAhCkB,CAAnB;AAiCA,eAAeK,UAAf","sourcesContent":["import React from 'react';\r\nimport {View, Text, Image, Button,TouchableHighlight,FlatList, ScrollView} from 'react-native';\r\nimport { connect } from 'react-redux';\r\nimport { convertObToArr, getCategoryName } from '../../data/MockDataAPI';\r\nimport SingleProductEditScreen from '../singleProductEdit/SingleProductEditScreen';\r\nimport styles from './styles';\r\n\r\n\r\nconst createNewProduct=()=>{\r\n    \r\n}\r\n\r\nconst mapStateToProps=(state)=>({\r\n    productsKeyInEdit:state.products\r\n})\r\nconst EditScreen = connect(mapStateToProps)((props)=>{\r\n    console.log('props in Edit page: ',convertObToArr(props.productsKeyInEdit));\r\n\r\n    const productEditHandler=(item)=>{\r\n      this.props.navigation.navigate('SingleProductEdit', { item });\r\n    };\r\n\r\n    const renderProducts = ({ item }) => {\r\n      item=Object.values(item)[0];\r\n      return (\r\n      <TouchableHighlight underlayColor='rgba(73,182,77,1,0.9)' onPress={() => productEditHandler(item)}>\r\n        <View style={styles.container}>\r\n          <Image style={styles.photo} source={{ uri: item.photo_url }} />\r\n          <Text style={styles.title}>{item.title}</Text>\r\n          <Text style={styles.category}>{getCategoryName(item.categoryId)}</Text>\r\n        </View>\r\n      </TouchableHighlight>\r\n    )};\r\n\r\n    return (\r\n        <View>\r\n            <FlatList\r\n            vertical\r\n            showsVerticalScrollIndicator={true}\r\n            numColumns={2}\r\n            data={ convertObToArr(props.productsKeyInEdit)}\r\n            renderItem={renderProducts}\r\n            keyExtractor={item => `${item.recipeId}`}\r\n            />\r\n            <Button title='create product' onPress={()=>createNewProduct()}/>\r\n      </View>\r\n    )\r\n})\r\nexport default EditScreen"]},"metadata":{},"sourceType":"module"}