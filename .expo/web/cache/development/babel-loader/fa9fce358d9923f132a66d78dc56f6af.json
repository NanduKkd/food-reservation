{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\shohrat.garadaghli\\\\Desktop\\\\dev\\\\orderApp\\\\src\\\\components\\\\ViewIngredientsButton\\\\ViewIngredientsButton.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport PropTypes from 'prop-types';\nimport styles from \"./styles\";\n\nvar ViewIngredientsButton = function (_React$Component) {\n  _inherits(ViewIngredientsButton, _React$Component);\n\n  var _super = _createSuper(ViewIngredientsButton);\n\n  function ViewIngredientsButton() {\n    var _this;\n\n    _classCallCheck(this, ViewIngredientsButton);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.onPress = function () {\n      _this.props.onPress();\n    };\n\n    return _this;\n  }\n\n  _createClass(ViewIngredientsButton, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(TouchableHighlight, {\n        underlayColor: \"rgba(73,182,77,1,0.9)\",\n        onPress: this.onPress,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: styles.text,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 11\n        }\n      }, \"View Ingredients\")));\n    }\n  }]);\n\n  return ViewIngredientsButton;\n}(React.Component);\n\nexport { ViewIngredientsButton as default };\nViewIngredientsButton.propTypes = {\n  onPress: PropTypes.func,\n  source: PropTypes.number,\n  title: PropTypes.string\n};","map":{"version":3,"sources":["C:/Users/shohrat.garadaghli/Desktop/dev/orderApp/src/components/ViewIngredientsButton/ViewIngredientsButton.js"],"names":["React","PropTypes","styles","ViewIngredientsButton","onPress","props","container","text","Component","propTypes","func","source","number","title","string"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;AAEA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP;;IAEqBC,qB;;;;;;;;;;;;;;;;UAEnBC,O,GAAQ,YAAI;AACV,YAAKC,KAAL,CAAWD,OAAX;AACD,K;;;;;;;6BAEQ;AACP,aACE,oBAAC,kBAAD;AAAoB,QAAA,aAAa,EAAC,uBAAlC;AAA0D,QAAA,OAAO,EAAE,KAAKA,OAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEF,MAAM,CAACI,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEJ,MAAM,CAACK,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,CADF,CADF;AAOD;;;;EAdgDP,KAAK,CAACQ,S;;SAApCL,qB;AAiBrBA,qBAAqB,CAACM,SAAtB,GAAkC;AAChCL,EAAAA,OAAO,EAAEH,SAAS,CAACS,IADa;AAEhCC,EAAAA,MAAM,EAAEV,SAAS,CAACW,MAFc;AAGhCC,EAAAA,KAAK,EAAEZ,SAAS,CAACa;AAHe,CAAlC","sourcesContent":["import React from 'react';\nimport { TouchableHighlight, Image, Text, View } from 'react-native';\nimport PropTypes from 'prop-types';\nimport styles from './styles';\n\nexport default class ViewIngredientsButton extends React.Component {\n\n  onPress=()=>{\n    this.props.onPress();\n  }\n  \n  render() {\n    return (\n      <TouchableHighlight underlayColor='rgba(73,182,77,1,0.9)' onPress={this.onPress}>\n        <View style={styles.container}>\n          <Text style={styles.text}>View Ingredients</Text>\n        </View>\n      </TouchableHighlight>\n    );\n  }\n}\n\nViewIngredientsButton.propTypes = {\n  onPress: PropTypes.func,\n  source: PropTypes.number,\n  title: PropTypes.string\n};\n"]},"metadata":{},"sourceType":"module"}